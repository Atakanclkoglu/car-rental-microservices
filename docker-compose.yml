version: '3.8'

services:
  user-db:
    image: postgres:14-alpine
    container_name: user-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user_db_user
      - POSTGRES_PASSWORD=user_db_password
      - POSTGRES_DB=user_db
    volumes:
      - user-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_db_user"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  user-service:
    build: ./user_service
    
    container_name: user-service
    ports:
      - "8000:8000"
    volumes:
      - ./user_service:/app
    environment:
      - DB_URL=postgresql://user_db_user:user_db_password@user-db:5432/user_db
    depends_on:
      user-db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000
  
  car-db:
    image: postgres:14-alpine
    container_name: car-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=car_db_user
      - POSTGRES_PASSWORD=car_db_password
      - POSTGRES_DB=car_db
    volumes:
      - car-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U car_db_user"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  car-service:
    build: ./car_service
    container_name: car-service
    ports:
      - "8001:8001"
    volumes:
      - ./car_service:/app
    environment:
      - DB_URL=postgresql://car_db_user:car_db_password@car-db:5432/car_db
    depends_on:
      car-db:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload

  booking-db:
    image: postgres:14-alpine
    container_name: booking-db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=booking_db_user
      - POSTGRES_PASSWORD=booking_db_password
      - POSTGRES_DB=booking_db
    volumes:
      - booking-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_db_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  booking-service:
    build: ./booking_service
    container_name: booking-service
    ports:
      - "8002:8002"
    volumes:
      - ./booking_service:/app
    environment:
    - DB_HOST=booking-db
    - DB_NAME=booking_db
    - DB_USER=booking_user
    - DB_PASSWORD=booking_password  
    depends_on:
      car-service:
        condition: service_started
      booking-db:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8002 --reload

volumes:
  user-db-data:
  car-db-data:
  booking-db-data: